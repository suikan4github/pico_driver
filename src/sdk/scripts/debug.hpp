
    void i2c_deinit ( i2c_inst_t *i2c )
      uint i2c_get_dreq ( i2c_inst_t *i2c, bool is_tx )
      i2c_hw_t* i2c_get_hw ( i2c_inst_t *i2c )
      uint i2c_get_index ( i2c_inst_t *i2c )
      i2c_inst_t* i2c_get_instance ( uint num )
      size_t i2c_get_read_available ( i2c_inst_t *i2c )
      size_t i2c_get_write_available ( i2c_inst_t *i2c )
    uint i2c_init ( i2c_inst_t *i2c, uint baudrate )
    int i2c_read_blocking ( i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop )
    int i2c_read_blocking_until ( i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, absolute_time_t until )
      uint8_t i2c_read_byte_raw ( i2c_inst_t *i2c )
      void i2c_read_raw_blocking ( i2c_inst_t *i2c, uint8_t *dst, size_t len )
    int i2c_read_timeout_per_char_us ( i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, uint timeout_per_char_us )
      int i2c_read_timeout_us ( i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, uint timeout_us )
    uint i2c_set_baudrate ( i2c_inst_t *i2c, uint baudrate )
    void i2c_set_slave_mode ( i2c_inst_t *i2c, bool slave, uint8_t addr )
    int i2c_write_blocking ( i2c_inst_t *i2c, uint8_t addr, const uint8_t *src, size_t len, bool nostop )
    int i2c_write_blocking_until ( i2c_inst_t *i2c, uint8_t addr, const uint8_t *src, size_t len, bool nostop, absolute_time_t until )
      void i2c_write_byte_raw ( i2c_inst_t *i2c, uint8_t value )
      void i2c_write_raw_blocking ( i2c_inst_t *i2c, const uint8_t *src, size_t len )
    int i2c_write_timeout_per_char_us ( i2c_inst_t *i2c, uint8_t addr, const uint8_t *src, size_t len, bool nostop, uint timeout_per_char_us )
      int i2c_write_timeout_us ( i2c_inst_t *i2c, uint8_t addr, const uint8_t *src, size_t len, bool nostop, uint timeout_us )
    int pio_add_program ( PIO pio, const pio_program_t *program )
    int pio_add_program_at_offset ( PIO pio, const pio_program_t *program, uint offset )
      void pio_calculate_clkdiv_from_float ( float div, uint16_t *div_int, uint8_t *div_frac )
    bool pio_can_add_program ( PIO pio, const pio_program_t *program )
    bool pio_can_add_program_at_offset ( PIO pio, const pio_program_t *program, uint offset )
    bool pio_claim_free_sm_and_add_program ( const pio_program_t *program, PIO *pio, uint *sm, uint *offset )
    bool pio_claim_free_sm_and_add_program_for_gpio_range ( const pio_program_t *program, PIO *pio, uint *sm, uint *offset, uint gpio_base, uint gpio_count, bool set_gpio_base )
    void pio_claim_sm_mask ( PIO pio, uint sm_mask )
    int pio_claim_unused_sm ( PIO pio, bool required )
    void pio_clear_instruction_memory ( PIO pio )
      void pio_clkdiv_restart_sm_mask ( PIO pio, uint32_t mask )
      void pio_clkdiv_restart_sm_multi_mask ( PIO pio, uint32_t mask_prev, uint32_t mask, uint32_t mask_next )
      void pio_enable_sm_mask_in_sync ( PIO pio, uint32_t mask )
      void pio_enable_sm_multi_mask_in_sync ( PIO pio, uint32_t mask_prev, uint32_t mask, uint32_t mask_next )
      pio_sm_config pio_get_default_sm_config ( void )
      uint pio_get_dreq ( PIO pio, uint sm, bool is_tx )
      uint pio_get_funcsel ( PIO pio )
      uint pio_get_gpio_base ( PIO pio )
      uint pio_get_index ( PIO pio )
      PIO pio_get_instance ( uint instance )
      int pio_get_irq_num ( PIO pio, uint irqn )
      pio_interrupt_source_t pio_get_rx_fifo_not_empty_interrupt_source ( uint sm )
      pio_interrupt_source_t pio_get_tx_fifo_not_full_interrupt_source ( uint sm )
      void pio_gpio_init ( PIO pio, uint pin )
      void pio_interrupt_clear ( PIO pio, uint pio_interrupt_num )
      bool pio_interrupt_get ( PIO pio, uint pio_interrupt_num )
    void pio_remove_program ( PIO pio, const pio_program_t *program, uint loaded_offset )
    void pio_remove_program_and_unclaim_sm ( const pio_program_t *program, PIO pio, uint sm, uint offset )
      void pio_restart_sm_mask ( PIO pio, uint32_t mask )
    int pio_set_gpio_base ( PIO pio, uint gpio_base )
      void pio_set_irq0_source_enabled ( PIO pio, pio_interrupt_source_t source, bool enabled )
      void pio_set_irq0_source_mask_enabled ( PIO pio, uint32_t source_mask, bool enabled )
      void pio_set_irq1_source_enabled ( PIO pio, pio_interrupt_source_t source, bool enabled )
      void pio_set_irq1_source_mask_enabled ( PIO pio, uint32_t source_mask, bool enabled )
      void pio_set_irqn_source_enabled ( PIO pio, uint irq_index, pio_interrupt_source_t source, bool enabled )
      void pio_set_irqn_source_mask_enabled ( PIO pio, uint irq_index, uint32_t source_mask, bool enabled )
      void pio_set_sm_mask_enabled ( PIO pio, uint32_t mask, bool enabled )
      void pio_set_sm_multi_mask_enabled ( PIO pio, uint32_t mask_prev, uint32_t mask, uint32_t mask_next, bool enabled )
    void pio_sm_claim ( PIO pio, uint sm )
      void pio_sm_clear_fifos ( PIO pio, uint sm )
      void pio_sm_clkdiv_restart ( PIO pio, uint sm )
    void pio_sm_drain_tx_fifo ( PIO pio, uint sm )
      void pio_sm_exec ( PIO pio, uint sm, uint instr )
      void pio_sm_exec_wait_blocking ( PIO pio, uint sm, uint instr )
      uint32_t pio_sm_get ( PIO pio, uint sm )
      uint32_t pio_sm_get_blocking ( PIO pio, uint sm )
      uint8_t pio_sm_get_pc ( PIO pio, uint sm )
      uint pio_sm_get_rx_fifo_level ( PIO pio, uint sm )
      uint pio_sm_get_tx_fifo_level ( PIO pio, uint sm )
    int pio_sm_init ( PIO pio, uint sm, uint initial_pc, const pio_sm_config *config )
    bool pio_sm_is_claimed ( PIO pio, uint sm )
      bool pio_sm_is_exec_stalled ( PIO pio, uint sm )
      bool pio_sm_is_rx_fifo_empty ( PIO pio, uint sm )
      bool pio_sm_is_rx_fifo_full ( PIO pio, uint sm )
      bool pio_sm_is_tx_fifo_empty ( PIO pio, uint sm )
      bool pio_sm_is_tx_fifo_full ( PIO pio, uint sm )
      void pio_sm_put ( PIO pio, uint sm, uint32_t data )
      void pio_sm_put_blocking ( PIO pio, uint sm, uint32_t data )
      void pio_sm_restart ( PIO pio, uint sm )
      void pio_sm_set_clkdiv ( PIO pio, uint sm, float div )
      void pio_sm_set_clkdiv_int_frac ( PIO pio, uint sm, uint16_t div_int, uint8_t div_frac )
      int pio_sm_set_config ( PIO pio, uint sm, const pio_sm_config *config )
    int pio_sm_set_consecutive_pindirs ( PIO pio, uint sm, uint pins_base, uint pin_count, bool is_out )
      void pio_sm_set_enabled ( PIO pio, uint sm, bool enabled )
      void pio_sm_set_in_pins ( PIO pio, uint sm, uint in_base )
      void pio_sm_set_jmp_pin ( PIO pio, uint sm, uint pin )
      void pio_sm_set_out_pins ( PIO pio, uint sm, uint out_base, uint out_count )
    void pio_sm_set_pindirs_with_mask ( PIO pio, uint sm, uint32_t pin_dirs, uint32_t pin_mask )
    void pio_sm_set_pins ( PIO pio, uint sm, uint32_t pin_values )
    void pio_sm_set_pins_with_mask ( PIO pio, uint sm, uint32_t pin_values, uint32_t pin_mask )
      void pio_sm_set_set_pins ( PIO pio, uint sm, uint set_base, uint set_count )
      void pio_sm_set_sideset_pins ( PIO pio, uint sm, uint sideset_base )
      void pio_sm_set_wrap ( PIO pio, uint sm, uint wrap_target, uint wrap )
    void pio_sm_unclaim ( PIO pio, uint sm )
      void sm_config_set_clkdiv ( pio_sm_config *c, float div )
      void sm_config_set_clkdiv_int_frac ( pio_sm_config *c, uint16_t div_int, uint8_t div_frac )
      void sm_config_set_fifo_join ( pio_sm_config *c, enum_pio_fifo_join join )
      void sm_config_set_in_pin_base ( pio_sm_config *c, uint in_base )
      void sm_config_set_in_pin_count ( pio_sm_config *c, uint in_count )
      void sm_config_set_in_pins ( pio_sm_config *c, uint in_base )
      void sm_config_set_in_shift ( pio_sm_config *c, bool shift_right, bool autopush, uint push_threshold )
      void sm_config_set_jmp_pin ( pio_sm_config *c, uint pin )
      void sm_config_set_mov_status ( pio_sm_config *c, enum_pio_mov_status_type status_sel, uint status_n )
      void sm_config_set_out_pin_base ( pio_sm_config *c, uint out_base )
      void sm_config_set_out_pin_count ( pio_sm_config *c, uint out_count )
      void sm_config_set_out_pins ( pio_sm_config *c, uint out_base, uint out_count )
      void sm_config_set_out_shift ( pio_sm_config *c, bool shift_right, bool autopull, uint pull_threshold )
      void sm_config_set_out_special ( pio_sm_config *c, bool sticky, bool has_enable_pin, uint enable_pin_index )
      void sm_config_set_set_pin_base ( pio_sm_config *c, uint set_base )
      void sm_config_set_set_pin_count ( pio_sm_config *c, uint set_count )
      void sm_config_set_set_pins ( pio_sm_config *c, uint set_base, uint set_count )
      void sm_config_set_sideset ( pio_sm_config *c, uint bit_count, bool optional, bool pindirs )
      void sm_config_set_sideset_pin_base ( pio_sm_config *c, uint sideset_base )
      void sm_config_set_sideset_pins ( pio_sm_config *c, uint sideset_base )
      void sm_config_set_wrap ( pio_sm_config *c, uint wrap_target, uint wrap )
    void gpio_acknowledge_irq ( uint gpio, uint32_t event_mask )
      void gpio_add_raw_irq_handler ( uint gpio, irq_handler_t handler )
    void gpio_add_raw_irq_handler_masked ( uint32_t gpio_mask, irq_handler_t handler )
    void gpio_add_raw_irq_handler_masked64 ( uint64_t gpio_mask, irq_handler_t handler )
      void gpio_add_raw_irq_handler_with_order_priority ( uint gpio, irq_handler_t handler, uint8_t order_priority )
    void gpio_add_raw_irq_handler_with_order_priority_masked ( uint32_t gpio_mask, irq_handler_t handler, uint8_t order_priority )
    void gpio_add_raw_irq_handler_with_order_priority_masked64 ( uint64_t gpio_mask, irq_handler_t handler, uint8_t order_priority )
      void gpio_assign_to_ns ( uint gpio, bool ns )
      void gpio_clr_mask ( uint32_t mask )
      void gpio_clr_mask64 ( uint64_t mask )
      void gpio_clr_mask_n ( uint n, uint32_t mask )
     void gpio_debug_pins_init ( void )
    void gpio_deinit ( uint gpio )
      void gpio_disable_pulls ( uint gpio )
      bool gpio_get ( uint gpio )
      uint32_t gpio_get_all ( void )
      uint64_t gpio_get_all64 ( void )
      uint gpio_get_dir ( uint gpio )
    enum_gpio_drive_strength gpio_get_drive_strength ( uint gpio )
    gpio_function_t gpio_get_function ( uint gpio )
      uint32_t gpio_get_irq_event_mask ( uint gpio )
      bool gpio_get_out_level ( uint gpio )
    enum_gpio_slew_rate gpio_get_slew_rate ( uint gpio )
    void gpio_init ( uint gpio )
    void gpio_init_mask ( uint gpio_mask )
      bool gpio_is_dir_out ( uint gpio )
    bool gpio_is_input_hysteresis_enabled ( uint gpio )
      bool gpio_is_pulled_down ( uint gpio )
      bool gpio_is_pulled_up ( uint gpio )
      void gpio_pull_down ( uint gpio )
      void gpio_pull_up ( uint gpio )
      void gpio_put ( uint gpio, bool value )
      void gpio_put_all ( uint32_t value )
      void gpio_put_all64 ( uint64_t value )
      void gpio_put_masked ( uint32_t mask, uint32_t value )
      void gpio_put_masked64 ( uint64_t mask, uint64_t value )
      void gpio_put_masked_n ( uint n, uint32_t mask, uint32_t value )
      void gpio_remove_raw_irq_handler ( uint gpio, irq_handler_t handler )
    void gpio_remove_raw_irq_handler_masked ( uint32_t gpio_mask, irq_handler_t handler )
    void gpio_remove_raw_irq_handler_masked64 ( uint64_t gpio_mask, irq_handler_t handler )
      void gpio_set_dir ( uint gpio, bool out )
      void gpio_set_dir_all_bits ( uint32_t values )
      void gpio_set_dir_all_bits64 ( uint64_t values )
      void gpio_set_dir_in_masked ( uint32_t mask )
      void gpio_set_dir_in_masked64 ( uint64_t mask )
      void gpio_set_dir_masked ( uint32_t mask, uint32_t value )
      void gpio_set_dir_masked64 ( uint64_t mask, uint64_t value )
      void gpio_set_dir_out_masked ( uint32_t mask )
      void gpio_set_dir_out_masked64 ( uint64_t mask )
    void gpio_set_dormant_irq_enabled ( uint gpio, uint32_t event_mask, bool enabled )
    void gpio_set_drive_strength ( uint gpio, enum_gpio_drive_strength drive )
    void gpio_set_function ( uint gpio, gpio_function_t fn )
    void gpio_set_function_masked ( uint32_t gpio_mask, gpio_function_t fn )
    void gpio_set_function_masked64 ( uint64_t gpio_mask, gpio_function_t fn )
    void gpio_set_inover ( uint gpio, uint value )
    void gpio_set_input_enabled ( uint gpio, bool enabled )
    void gpio_set_input_hysteresis_enabled ( uint gpio, bool enabled )
    void gpio_set_irq_callback ( gpio_irq_callback_t callback )
    void gpio_set_irq_enabled ( uint gpio, uint32_t event_mask, bool enabled )
    void gpio_set_irq_enabled_with_callback ( uint gpio, uint32_t event_mask, bool enabled, gpio_irq_callback_t callback )
    void gpio_set_irqover ( uint gpio, uint value )
      void gpio_set_mask ( uint32_t mask )
      void gpio_set_mask64 ( uint64_t mask )
      void gpio_set_mask_n ( uint n, uint32_t mask )
    void gpio_set_oeover ( uint gpio, uint value )
    void gpio_set_outover ( uint gpio, uint value )
    void gpio_set_pulls ( uint gpio, bool up, bool down )
    void gpio_set_slew_rate ( uint gpio, enum_gpio_slew_rate slew )
      void gpio_xor_mask ( uint32_t mask )
      void gpio_xor_mask64 ( uint64_t mask )
      void gpio_xor_mask_n ( uint n, uint32_t mask )
    bool check_sys_clock_hz ( uint32_t freq_hz, uint *vco_freq_out, uint *post_div1_out, uint *post_div2_out )
    bool check_sys_clock_khz ( uint32_t freq_khz, uint *vco_freq_out, uint *post_div1_out, uint *post_div2_out )
    bool clock_configure ( clock_handle_t clock, uint32_t src, uint32_t auxsrc, uint32_t src_freq, uint32_t freq )
    bool clock_configure_gpin ( clock_handle_t clock, uint gpio, uint32_t src_freq, uint32_t freq )
    void clock_configure_int_divider ( clock_handle_t clock, uint32_t src, uint32_t auxsrc, uint32_t src_freq, uint32_t int_divider )
    void clock_configure_undivided ( clock_handle_t clock, uint32_t src, uint32_t auxsrc, uint32_t src_freq )
    uint32_t clock_get_hz ( clock_handle_t clock )
      void clock_gpio_init ( uint gpio, uint src, float div )
    void clock_gpio_init_int_frac ( uint gpio, uint src, uint32_t div_int, uint8_t div_frac )
    void clock_set_reported_hz ( clock_handle_t clock, uint hz )
    void clock_stop ( clock_handle_t clock )
    void clocks_enable_resus ( resus_callback_t resus_callback )
    uint32_t frequency_count_khz ( uint src )
      float frequency_count_mhz ( uint src )
    void set_sys_clock_48mhz ( void )
      bool set_sys_clock_hz ( uint32_t freq_hz, bool required )
      bool set_sys_clock_khz ( uint32_t freq_khz, bool required )
    void set_sys_clock_pll ( uint32_t vco_freq, uint post_div1, uint post_div2 )
