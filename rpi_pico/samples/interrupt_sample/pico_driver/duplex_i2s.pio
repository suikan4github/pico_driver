;
;  RP2040 / RP2035 PIO program for the duplex I2S transfer in slave mode. 
;
;
; The I2S signal wave form is depicted below : 
;
;                  ┐　┌─┐　┌─┐　┌─┐　┌─┐　
;             BCLK └─┘　└─┘　└─┘　└─┘　└─
;                  ┐
;               WS └─────────────────
;
;         BIT SLOT │　００│　３１│　３０　│　２９│　
;
; The rising edge of the BCLK is the sampling edge of the I2S. 
; So we can call the period from a falling edge to the next falling
; edge as a "BIT SLOT". 
;
; Per definition of I2S standard, the first bit slot after the
; falling edge of the WS is the last bit slot (00) of the previous 
; right channel. 
;
; In the program below, we have 3 sync loop before the actual data
; transfer. These sync loops guarantees the data integrity for 
; any timing of the program start.  
;
; Pin mappings : 
; - Out pin 0 : Signal Data out. 
; - In pin 0 : Signal Data in. 
; - In pin 1 : BCLK in.
; - In pin 2 : WS. Configured as JMP pin. 

.pio_version 0              ; only requires PIO version 0

.program duplex_i2s

sync2_loop:                 ; Loop to transfer right ch
        wait 0 pin 1        ; Capture falling edge of BCLK(Sync to the driving edge of BCLK). 
        wait 1 pin 1        ; Capture riging edge of BCLK(Sync to the Sampling edge of BCLK). 
    jmp pin sync2_loop      ; repeat while WS == 1.

sync1_loop:                 ; Loop to transfer left ch. 
        wait 0 pin 1        ; Capture falling edge of BCLK(Sync to the driving edge of BCLK). 
        wait 1 pin 1        ; Capture riging edge of BCLK(Sync to the Sampling edge of BCLK). 
        jmp pin sync0_loop  ; Exit loop if WS == 1
    jmp sync1_loop          ; repeat while WS == 0. 
 
sync0_loop:                 ; We are fully sync with Right channel here. WS is 1 at here. 
        wait 0 pin 1        ; Capture falling edge of BCLK(Sync to the driving edge of BCLK). 
        wait 1 pin 1        ; Capture riging edge of BCLK(Sync to the Sampling edge of BCLK). 
    jmp pin sync0_loop      ; repeat while WS == 1.
 
.wrap_target                ; Beginning of stereo data transfer. WS is 0 at here. 
                            ; Transfer Left ch
    pull noblock            ; We have OSR empty. Load left ch data. 

left_loop:                  ; Loop to transfer left ch. 
        wait 0 pin 1        ; Capture falling edge of BCLK(Sync to the driving edge of BCLK). 
        out pins, 1         ; Output 1 bit to DAC. 
        wait 1 pin 1        ; Capture riging edge of BCLK(Sync to the Sampling edge of BCLK). 
        in pins, 1          ; Input 1 bit from ADC.
        jmp pin left_exit   ; Exit loop if WS == 1
    jmp left_loop           ; repeat while WS == 0. 

left_exit:                  ; Tearing off the shift registers. WS is 1 at here. 
    push noblock            ; We have ISR full. Push ISR and ready for right data. 

                            ; Transfer right ch
    pull noblock            ; We have OSR empty. Load right ch data. 

right_loop:                 ; Loop to transfer right ch
        wait 0 pin 1        ; Capture falling edge of BCLK(Sync to the driving edge of BCLK). 
        out pins, 1         ; Output 1 bit to DAC. 
        wait 1 pin 1        ; Capture riging edge of BCLK(Sync to the Sampling edge of BCLK). 
        in pins, 1          ; Input 1 bit from ADC.
    jmp pin right_loop      ; repeat while WS == 1.

                            ; Tearing off the shift register. 
    push noblock            ; We have ISR full. Push ISR and ready for left data.
.wrap

; This program takes 4 cycles for the second half of a bit slot. 
; This happens when program wraps. So, for the entire clock cycle, 
; we need 8 cycle. 
;
; For the 96kHz I2S stereo ( 32bit word), the BCLK is 6MHz. As a result, 
; we need 48MHz for PIO clock. 
